{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/auth/google": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register new or sign in old user using Google OAuth2.0",
                "parameters": [
                    {
                        "description": "Google OAuth request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/google.OAuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register new user and return auth data",
                "parameters": [
                    {
                        "description": "Create user request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "415": {
                        "description": "Unsupported Media Type"
                    }
                }
            }
        },
        "/auth/sign-in": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Sign in to user account and return auth data",
                "parameters": [
                    {
                        "description": "Sign in request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.SignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/quest": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Quests"
                ],
                "summary": "Get many quests sorted by start time and finished status",
                "parameters": [
                    {
                        "maxLength": 3,
                        "minLength": 0,
                        "type": "array",
                        "items": {
                            "enum": [
                                "all",
                                "registered",
                                "owned"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Fields to return",
                        "name": "fields",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 50,
                        "description": "Number of quests to return for each field",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page ID to return. Mutually exclusive to multiple fields",
                        "name": "page_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/quests.Quests"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Quests"
                ],
                "summary": "Create new quest",
                "parameters": [
                    {
                        "description": "Main quest information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.CreateQuestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.Quest"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "415": {
                        "description": "Unsupported Media Type"
                    }
                }
            }
        },
        "/quest/{id}/task-groups/bulk": {
            "patch": {
                "tags": [
                    "TaskGroups"
                ],
                "summary": "Patch task groups by creating new ones, delete, update and reorder all ones. Returns all exising task groups.",
                "parameters": [
                    {
                        "description": "Requests to delete/create/update task groups",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.TaskGroupsBulkUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/storage.TaskGroup"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/quest/{quest_id}": {
            "get": {
                "tags": [
                    "Quests"
                ],
                "summary": "Get quest by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Quest ID",
                        "name": "quest_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.Quest"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Quests"
                ],
                "summary": "Update main quest information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Quest ID",
                        "name": "quest_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Quest information to update",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.UpdateQuestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.Quest"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "415": {
                        "description": "Unsupported Media Type"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Quests"
                ],
                "summary": "Delete quest",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Quest ID",
                        "name": "quest_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/quest/{quest_id}/teams": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "summary": "Get all teams by quest id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Quest id",
                        "name": "quest_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/storage.Team"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Teams"
                ],
                "summary": "Create new team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Quest ID",
                        "name": "quest_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Desired team information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/teams.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.Team"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "406": {
                        "description": "Not Acceptable"
                    }
                }
            }
        },
        "/teams/join/{invite_path}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Teams"
                ],
                "summary": "Join team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team invite url param",
                        "name": "invite_path",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.Team"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "406": {
                        "description": "Not Acceptable"
                    }
                }
            }
        },
        "/teams/{team_id}": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "summary": "Get team by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team id",
                        "name": "team_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.Team"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Teams"
                ],
                "summary": "Change team information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team id",
                        "name": "team_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/teams.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.Team"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Teams"
                ],
                "summary": "Delete team by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team id",
                        "name": "team_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/teams/{team_id}/captain": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Teams"
                ],
                "summary": "Change team captain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team id",
                        "name": "team_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Change captain request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/teams.ChangeLeaderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.Team"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/teams/{team_id}/leave": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Teams"
                ],
                "summary": "Leave the team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team id",
                        "name": "team_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New captain (if leader leaves)",
                        "name": "new_captain_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.Team"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/teams/{team_id}/{member_id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Teams"
                ],
                "summary": "Remove member from team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team id",
                        "name": "team_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Member id",
                        "name": "member_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.Team"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/user/{user_id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.User"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user public data such as username or avatar and returns new auth data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Public data to set for user",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdatePublicDataRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete user account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.Response": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/storage.User"
                }
            }
        },
        "auth.SignInRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "google.OAuthRequest": {
            "type": "object",
            "properties": {
                "id_token": {
                    "type": "string"
                }
            }
        },
        "quests.PaginatedQuestsResponse": {
            "type": "object",
            "properties": {
                "next_page_id": {
                    "type": "string"
                },
                "quests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.Quest"
                    }
                }
            }
        },
        "quests.Quests": {
            "type": "object",
            "properties": {
                "all": {
                    "$ref": "#/definitions/quests.PaginatedQuestsResponse"
                },
                "owned": {
                    "$ref": "#/definitions/quests.PaginatedQuestsResponse"
                },
                "registered": {
                    "$ref": "#/definitions/quests.PaginatedQuestsResponse"
                }
            }
        },
        "storage.AccessType": {
            "type": "string",
            "enum": [
                "public",
                "link_only"
            ],
            "x-enum-varnames": [
                "AccessPublic",
                "AccessLinkOnly"
            ]
        },
        "storage.CreateQuestRequest": {
            "type": "object",
            "properties": {
                "access": {
                    "$ref": "#/definitions/storage.AccessType"
                },
                "description": {
                    "type": "string"
                },
                "finish_time": {
                    "type": "string",
                    "example": "2024-04-21T14:00:00+05:00"
                },
                "max_team_cap": {
                    "type": "integer"
                },
                "media_link": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "registration_deadline": {
                    "type": "string",
                    "example": "2024-04-14T12:00:00+05:00"
                },
                "start_time": {
                    "type": "string",
                    "example": "2024-04-14T14:00:00+05:00"
                }
            }
        },
        "storage.CreateTaskGroupRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "order_idx": {
                    "type": "integer"
                },
                "pub_time": {
                    "type": "string"
                }
            }
        },
        "storage.CreateUserRequest": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string",
                    "example": "https://api.dicebear.com/7.x/thumbs/svg"
                },
                "password": {
                    "type": "string",
                    "example": "12345"
                },
                "username": {
                    "type": "string",
                    "example": "svayp11"
                }
            }
        },
        "storage.DeleteTaskGroupRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "storage.Quest": {
            "type": "object",
            "properties": {
                "access": {
                    "$ref": "#/definitions/storage.AccessType"
                },
                "creator": {
                    "$ref": "#/definitions/storage.User"
                },
                "description": {
                    "type": "string"
                },
                "finish_time": {
                    "type": "string",
                    "example": "2024-04-21T14:00:00+05:00"
                },
                "id": {
                    "type": "string"
                },
                "max_team_cap": {
                    "type": "integer"
                },
                "media_link": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "registration_deadline": {
                    "type": "string",
                    "example": "2024-04-14T12:00:00+05:00"
                },
                "start_time": {
                    "type": "string",
                    "example": "2024-04-14T14:00:00+05:00"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ON_REGISTRATION",
                        "REGISTRATION_DONE",
                        "RUNNING",
                        "WAIT_RESULTS",
                        "FINISHED"
                    ]
                }
            }
        },
        "storage.TaskGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "orderIdx": {
                    "type": "integer"
                },
                "pubTime": {
                    "type": "string"
                },
                "quest": {
                    "$ref": "#/definitions/storage.Quest"
                }
            }
        },
        "storage.TaskGroupsBulkUpdateRequest": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.CreateTaskGroupRequest"
                    }
                },
                "delete": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.DeleteTaskGroupRequest"
                    }
                },
                "update": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.UpdateTaskGroupRequest"
                    }
                }
            }
        },
        "storage.Team": {
            "type": "object",
            "properties": {
                "captain": {
                    "$ref": "#/definitions/storage.User"
                },
                "id": {
                    "type": "string"
                },
                "invite_link": {
                    "type": "string"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.User"
                    }
                },
                "name": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                }
            }
        },
        "storage.UpdateQuestRequest": {
            "type": "object",
            "properties": {
                "access": {
                    "$ref": "#/definitions/storage.AccessType"
                },
                "creator_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "finish_time": {
                    "type": "string"
                },
                "max_team_cap": {
                    "type": "integer"
                },
                "media_link": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "registration_deadline": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "storage.UpdateTaskGroupRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order_idx": {
                    "type": "integer"
                },
                "pub_time": {
                    "type": "string"
                }
            }
        },
        "storage.User": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "teams.ChangeLeaderRequest": {
            "type": "object",
            "properties": {
                "new_captain_id": {
                    "type": "string"
                }
            }
        },
        "teams.CreateRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "teams.UpdateRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "user.UpdatePasswordRequest": {
            "type": "object",
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                }
            }
        },
        "user.UpdatePublicDataRequest": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}