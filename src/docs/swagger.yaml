definitions:
  auth.GoogleOAuthRequest:
    properties:
      id_token:
        type: string
    type: object
  auth.SignInRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  storage.CreateQuestRequest:
    properties:
      access:
        type: string
      creator_name:
        type: string
      description:
        type: string
      finish_time:
        type: string
      max_team_cap:
        type: integer
      media_link:
        type: string
      name:
        type: string
      registration_deadline:
        type: string
      start_time:
        type: string
    type: object
  storage.CreateUserRequest:
    properties:
      avatar_url:
        example: https://api.dicebear.com/7.x/thumbs/svg
        type: string
      password:
        example: "12345"
        type: string
      username:
        example: svayp11
        type: string
    type: object
  storage.Quest:
    properties:
      access:
        type: string
      creator:
        $ref: '#/definitions/storage.User'
      description:
        type: string
      finish_time:
        type: string
      id:
        type: string
      max_team_cap:
        type: integer
      media_link:
        type: string
      name:
        type: string
      registration_deadline:
        type: string
      start_time:
        type: string
    type: object
  storage.UpdateQuestRequest:
    properties:
      access:
        type: string
      creator_name:
        type: string
      description:
        type: string
      finish_time:
        type: string
      max_team_cap:
        type: integer
      media_link:
        type: string
      name:
        type: string
      registration_deadline:
        type: string
      start_time:
        type: string
    type: object
  storage.User:
    properties:
      avatar_url:
        type: string
      id:
        type: string
      username:
        type: string
    type: object
  user.UpdatePasswordRequest:
    properties:
      new_password:
        type: string
      old_password:
        type: string
    type: object
  user.UpdatePublicDataRequest:
    properties:
      avatar_url:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/google:
    post:
      parameters:
      - description: Google OAuth request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.GoogleOAuthRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/storage.User'
        "400":
          description: Bad Request
        "415":
          description: Unsupported Media Type
      summary: Register new or sign in old user using Google OAuth2.0
  /auth/register:
    post:
      parameters:
      - description: Create user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/storage.CreateUserRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/storage.User'
        "400":
          description: Bad Request
        "415":
          description: Unsupported Media Type
      summary: Register new user and return auth data
  /auth/sign-in:
    post:
      parameters:
      - description: Sign in request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.SignInRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/storage.User'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "415":
          description: Unsupported Media Type
      summary: Sign in to user account and return auth data
  /quest:
    post:
      parameters:
      - description: Create quest request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/storage.CreateQuestRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/storage.Quest'
        "400":
          description: Bad Request
        "422":
          description: Unprocessable Entity
      summary: Create quest
  /quest/{quest_id}:
    get:
      parameters:
      - description: Quest ID
        in: path
        name: quest_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/storage.Quest'
        "404":
          description: Not Found
      summary: Get quest by id
    post:
      parameters:
      - description: Quest ID
        in: path
        name: quest_id
        required: true
        type: string
      - description: Update quest request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/storage.UpdateQuestRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/storage.Quest'
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
      summary: Update quest
  /user/{user_id}:
    get:
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/storage.User'
        "404":
          description: Not Found
      summary: Get user by id
    post:
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: Public data to set for user
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UpdatePublicDataRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/storage.User'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
      summary: Update user public data such as username or avatar
  /user/{user_id}/password:
    post:
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: Old and new password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UpdatePasswordRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/storage.User'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update user password
swagger: "2.0"
